name: React Run test on Pull reqest
on:
  pull_request:
    branches:
      - master # master Branch에서 push 이벤트가 일어났을 때만 실행

jobs:
  build:
    runs-on: ubuntu-20.04
    env: # environment setting
      REACT_APP_DAILY_CORONA_STATUS_API_SERVICE_KEY: ${{secrets.REACT_APP_DAILY_CORONA_STATUS_API_SERVICE_KEY}}
    steps:
     - name: Checkout source code. # 레포지토리 체크아웃
       uses: actions/checkout@master

     - name: Cache node modules      # node modules 캐싱
       uses: actions/cache@v2
       with:
         path: node_modules
         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
           ${{ runner.OS }}-

     - name: Instal Dependencies # 의존 파일 설치
       run: npm install

     - name: Test
       run: npm run test
     - name: if fail
       uses: actions/github-script@v5.0.0
       with:
         github-token: ${{github.token}}
         script: |
           const ref = "${{github.ref}}"
           const pull_number = Number(ref.split("/")[2])
           await github.pulls.createReview({
             ...context.repo,
             pull_number,
             body:"테스트코드를 다시 확인해주세요. ",
             event: "REQUEST_CHANGES"
           })
           await github.pulls.update({
             ...context.repo,
             pull_number,
             state: "closed"
           })
       if: failure() # 이전 step 실패 시 pr closed
     - name: if success
       uses: actions/github-script@v5.0.0
       with:
         github-token: ${{github.token}}
         script: |
           const ref = "${{github.ref}}"
           const pull_number = Number(ref.split("/")[2])
           await github.pulls.update({
             ...context.repo,
             pull_number,
             state: "merged"
           })
       if: success() # 이전 step 성공 시 pr merge
    timeout-minutes: 5
